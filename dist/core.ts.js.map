{"version":3,"file":"core.ts.js","sources":["../src/core/utils.ts","../src/core/create_manifests.ts","../src/core/create_compilers.ts","../src/core/create_routes.ts"],"sourcesContent":["import * as sander from 'sander';\n\nconst previous_contents = new Map();\n\nexport function write_if_changed(file: string, code: string) {\n\tif (code !== previous_contents.get(file)) {\n\t\tprevious_contents.set(file, code);\n\t\tsander.writeFileSync(file, code);\n\t\tfudge_mtime(file);\n\t}\n}\n\nexport function posixify(file: string) {\n\treturn file.replace(/[/\\\\]/g, '/');\n}\n\nexport function fudge_mtime(file: string) {\n\t// need to fudge the mtime so that webpack doesn't go doolally\n\tconst { atime, mtime } = sander.statSync(file);\n\tsander.utimesSync(\n\t\tfile,\n\t\tnew Date(atime.getTime() - 999999),\n\t\tnew Date(mtime.getTime() - 999999)\n\t);\n}","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as glob from 'glob';\nimport { posixify, write_if_changed } from './utils';\nimport { dev, locations } from '../config';\nimport { Route } from '../interfaces';\n\nexport function create_main_manifests({ routes, dev_port }: {\n\troutes: Route[];\n\tdev_port?: number;\n}) {\n\tconst path_to_routes = path.relative(`${locations.app()}/manifest`, locations.routes());\n\n\tconst client_manifest = generate_client(routes, path_to_routes, dev_port);\n\tconst server_manifest = generate_server(routes, path_to_routes);\n\n\twrite_if_changed(`${locations.app()}/manifest/client.js`, client_manifest);\n\twrite_if_changed(`${locations.app()}/manifest/server.js`, server_manifest);\n}\n\nexport function create_serviceworker_manifest({ routes, client_files }: {\n\troutes: Route[];\n\tclient_files: string[];\n}) {\n\tconst assets = glob.sync('**', { cwd: 'assets', nodir: true });\n\n\tlet code = `\n\t\t// This file is generated by Sapper — do not edit it!\n\t\texport const timestamp = ${Date.now()};\n\n\t\texport const assets = [\\n\\t${assets.map((x: string) => `\"${x}\"`).join(',\\n\\t')}\\n];\n\n\t\texport const shell = [\\n\\t${client_files.map((x: string) => `\"${x}\"`).join(',\\n\\t')}\\n];\n\n\t\texport const routes = [\\n\\t${routes.filter((r: Route) => r.type === 'page' && !/^_[45]xx$/.test(r.id)).map((r: Route) => `{ pattern: ${r.pattern} }`).join(',\\n\\t')}\\n];\n\t`.replace(/^\\t\\t/gm, '').trim();\n\n\twrite_if_changed(`${locations.app()}/manifest/service-worker.js`, code);\n}\n\nfunction generate_client(routes: Route[], path_to_routes: string, dev_port?: number) {\n\tlet code = `\n\t\t// This file is generated by Sapper — do not edit it!\n\t\texport const routes = [\n\t\t\t${routes\n\t\t\t\t.map(route => {\n\t\t\t\t\tconst page = route.handlers.find(({ type }) => type === 'page');\n\n\t\t\t\t\tif (!page) {\n\t\t\t\t\t\treturn `{ pattern: ${route.pattern}, ignore: true }`;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst file = posixify(`${path_to_routes}/${page.file}`);\n\n\t\t\t\t\tif (route.id === '_4xx' || route.id === '_5xx') {\n\t\t\t\t\t\treturn `{ error: '${route.id.slice(1)}', load: () => import(/* webpackChunkName: \"${route.id}\" */ '${file}') }`;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst params = route.params.length === 0\n\t\t\t\t\t\t? '{}'\n\t\t\t\t\t\t: `{ ${route.params.map((part, i) => `${part}: match[${i + 1}]`).join(', ')} }`;\n\n\t\t\t\t\treturn `{ pattern: ${route.pattern}, params: ${route.params.length > 0 ? `match` : `()`} => (${params}), load: () => import(/* webpackChunkName: \"${route.id}\" */ '${file}') }`;\n\t\t\t\t})\n\t\t\t\t.join(',\\n\\t')}\n\t\t];`.replace(/^\\t\\t/gm, '').trim();\n\n\tif (dev()) {\n\t\tconst sapper_dev_client = posixify(\n\t\t\tpath.resolve(__dirname, '../sapper-dev-client.js')\n\t\t);\n\n\t\tcode += `\n\n\t\t\tif (module.hot) {\n\t\t\t\timport('${sapper_dev_client}').then(client => {\n\t\t\t\t\tclient.connect(${dev_port});\n\t\t\t\t});\n\t\t\t}`.replace(/^\\t{3}/gm, '');\n\t}\n\n\treturn code;\n}\n\nfunction generate_server(routes: Route[], path_to_routes: string) {\n\tlet code = `\n\t\t// This file is generated by Sapper — do not edit it!\n\t\t${routes\n\t\t\t.map(route =>\n\t\t\t\troute.handlers\n\t\t\t\t\t.map(({ type, file }, index) => {\n\t\t\t\t\t\tconst module = posixify(`${path_to_routes}/${file}`);\n\n\t\t\t\t\t\treturn type === 'page'\n\t\t\t\t\t\t\t? `import ${route.id}${index} from '${module}';`\n\t\t\t\t\t\t\t: `import * as ${route.id}${index} from '${module}';`;\n\t\t\t\t\t})\n\t\t\t\t\t.join('\\n')\n\t\t\t)\n\t\t\t.join('\\n')}\n\n\t\texport const routes = [\n\t\t\t${routes\n\t\t\t\t.map(route => {\n\t\t\t\t\tconst handlers = route.handlers\n\t\t\t\t\t\t.map(({ type }, index) =>\n\t\t\t\t\t\t\t`{ type: '${type}', module: ${route.id}${index} }`)\n\t\t\t\t\t\t.join(', ');\n\n\t\t\t\t\tif (route.id === '_4xx' || route.id === '_5xx') {\n\t\t\t\t\t\treturn `{ error: '${route.id.slice(1)}', handlers: [${handlers}] }`;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst params = route.params.length === 0\n\t\t\t\t\t\t? '{}'\n\t\t\t\t\t\t: `{ ${route.params.map((part, i) => `${part}: match[${i + 1}]`).join(', ')} }`;\n\n\t\t\t\t\treturn `{ id: '${route.id}', pattern: ${route.pattern}, params: ${route.params.length > 0 ? `match` : `()`} => (${params}), handlers: [${handlers}] }`;\n\t\t\t\t})\n\t\t\t\t.join(',\\n\\t')\n\t\t\t}\n\t\t];`.replace(/^\\t\\t/gm, '').trim();\n\n\treturn code;\n}","import * as path from 'path';\nimport relative from 'require-relative';\n\nexport default function create_compilers({ webpack }: { webpack: string }) {\n\tconst wp = relative('webpack', process.cwd());\n\n\tconst serviceworker_config = try_require(path.resolve(`${webpack}/service-worker.config.js`));\n\n\treturn {\n\t\tclient: wp(\n\t\t\trequire(path.resolve(`${webpack}/client.config.js`))\n\t\t),\n\n\t\tserver: wp(\n\t\t\trequire(path.resolve(`${webpack}/server.config.js`))\n\t\t),\n\n\t\tserviceworker: serviceworker_config && wp(serviceworker_config)\n\t};\n}\n\nfunction try_require(specifier: string) {\n\ttry {\n\t\treturn require(specifier);\n\t} catch (err) {\n\t\tif (err.code === 'MODULE_NOT_FOUND') return null;\n\t\tthrow err;\n\t}\n}","import * as path from 'path';\nimport glob from 'glob';\nimport { locations } from '../config';\nimport { Route } from '../interfaces';\n\nexport default function create_routes({ files } = { files: glob.sync('**/*.*', { cwd: locations.routes(), dot: true, nodir: true }) }) {\n\tconst routes: Route[] = files\n\t\t.filter((file: string) => !/(^|\\/|\\\\)_/.test(file))\n\t\t.map((file: string) => {\n\t\t\tif (/(^|\\/|\\\\)(_|\\.(?!well-known))/.test(file)) return;\n\n\t\t\tif (/]\\[/.test(file)) {\n\t\t\t\tthrow new Error(`Invalid route ${file} — parameters must be separated`);\n\t\t\t}\n\n\t\t\tconst base = file.replace(/\\.[^/.]+$/, '');\n\t\t\tconst parts = base.split('/'); // glob output is always posix-style\n\t\t\tif (parts[parts.length - 1] === 'index') parts.pop();\n\n\t\t\treturn {\n\t\t\t\tfiles: [file],\n\t\t\t\tbase,\n\t\t\t\tparts\n\t\t\t};\n\t\t})\n\t\t.filter(Boolean)\n\t\t.filter((a, index, array) => {\n\t\t\tconst found = array.slice(index + 1).find(b => a.base === b.base);\n\t\t\tif (found) found.files.push(...a.files);\n\t\t\treturn !found;\n\t\t})\n\t\t.sort((a, b) => {\n\t\t\tif (a.parts[0] === '4xx' || a.parts[0] === '5xx') return -1;\n\t\t\tif (b.parts[0] === '4xx' || b.parts[0] === '5xx') return 1;\n\n\t\t\tconst max = Math.max(a.parts.length, b.parts.length);\n\n\t\t\tfor (let i = 0; i < max; i += 1) {\n\t\t\t\tconst a_part = a.parts[i];\n\t\t\t\tconst b_part = b.parts[i];\n\n\t\t\t\tif (!a_part) return -1;\n\t\t\t\tif (!b_part) return 1;\n\n\t\t\t\tconst a_sub_parts = get_sub_parts(a_part);\n\t\t\t\tconst b_sub_parts = get_sub_parts(b_part);\n\t\t\t\tconst max = Math.max(a_sub_parts.length, b_sub_parts.length);\n\n\t\t\t\tfor (let i = 0; i < max; i += 1) {\n\t\t\t\t\tconst a_sub_part = a_sub_parts[i];\n\t\t\t\t\tconst b_sub_part = b_sub_parts[i];\n\n\t\t\t\t\tif (!a_sub_part) return 1; // b is more specific, so goes first\n\t\t\t\t\tif (!b_sub_part) return -1;\n\n\t\t\t\t\tif (a_sub_part.dynamic !== b_sub_part.dynamic) {\n\t\t\t\t\t\treturn a_sub_part.dynamic ? 1 : -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!a_sub_part.dynamic && a_sub_part.content !== b_sub_part.content) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t(b_sub_part.content.length - a_sub_part.content.length) ||\n\t\t\t\t\t\t\t(a_sub_part.content < b_sub_part.content ? -1 : 1)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow new Error(`The ${a.base} and ${b.base} routes clash`);\n\t\t})\n\t\t.map(({ files, base, parts }) => {\n\t\t\tconst id = (\n\t\t\t\tparts.join('_').replace(/[[\\]]/g, '$').replace(/^\\d/, '_$&').replace(/[^a-zA-Z0-9_$]/g, '_')\n\t\t\t ) || '_';\n\n\t\t\tconst params: string[] = [];\n\t\t\tconst param_pattern = /\\[([^\\]]+)\\]/g;\n\t\t\tlet match;\n\t\t\twhile (match = param_pattern.exec(base)) {\n\t\t\t\tparams.push(match[1]);\n\t\t\t}\n\n\t\t\t// TODO can we do all this with sub-parts? or does\n\t\t\t// nesting make that impossible?\n\t\t\tlet pattern_string = '';\n\t\t\tlet i = parts.length;\n\t\t\tlet nested = true;\n\t\t\twhile (i--) {\n\t\t\t\tconst part = encodeURI(parts[i].normalize()).replace(/\\?/g, '%3F').replace(/#/g, '%23').replace(/%5B/g, '[').replace(/%5D/g, ']');\n\t\t\t\tconst dynamic = ~part.indexOf('[');\n\n\t\t\t\tif (dynamic) {\n\t\t\t\t\tconst matcher = part.replace(param_pattern, `([^\\/]+?)`);\n\t\t\t\t\tpattern_string = nested ? `(?:\\\\/${matcher}${pattern_string})?` : `\\\\/${matcher}${pattern_string}`;\n\t\t\t\t} else {\n\t\t\t\t\tnested = false;\n\t\t\t\t\tpattern_string = `\\\\/${part}${pattern_string}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst pattern = new RegExp(`^${pattern_string}\\\\/?$`);\n\n\t\t\tconst test = (url: string) => pattern.test(url);\n\n\t\t\tconst exec = (url: string) => {\n\t\t\t\tconst match = pattern.exec(url);\n\t\t\t\tif (!match) return;\n\n\t\t\t\tconst result: Record<string, string> = {};\n\t\t\t\tparams.forEach((param, i) => {\n\t\t\t\t\tresult[param] = match[i + 1];\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\thandlers: files.map(file => ({\n\t\t\t\t\ttype: path.extname(file) === '.html' ? 'page' : 'route',\n\t\t\t\t\tfile\n\t\t\t\t})).sort((a, b) => {\n\t\t\t\t\tif (a.type === 'page' && b.type === 'route') {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (a.type === 'route' && b.type === 'page') {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 0;\n\t\t\t\t}),\n\t\t\t\tpattern,\n\t\t\t\ttest,\n\t\t\t\texec,\n\t\t\t\tparts,\n\t\t\t\tparams\n\t\t\t};\n\t\t});\n\n\treturn routes;\n}\n\nfunction get_sub_parts(part: string) {\n\treturn part.split(/[\\[\\]]/)\n\t\t.map((content, i) => {\n\t\t\tif (!content) return null;\n\t\t\treturn {\n\t\t\t\tcontent,\n\t\t\t\tdynamic: i % 2 === 1\n\t\t\t};\n\t\t})\n\t\t.filter(Boolean);\n}"],"names":["sander.writeFileSync","sander.utimesSync","path.relative","locations","glob.sync","dev","path.resolve","path.extname"],"mappings":"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"}