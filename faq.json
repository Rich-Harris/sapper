[{"fragment":"version-numbers","answer":"<p>We are currently working on Sapper&#39;s successor, <a href=\"https://kit.svelte.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">SvelteKit</a>. There are still some known issues to resolve and aspects of the design that will change. Whether you want to start on SvelteKit will be determined by how willing you are to deal with bumps in the road during a beta period. If you want to evaluate starting on the more stable Sapper project and then migrating to SvelteKit, please see the <a href=\"https://kit.svelte.dev/migrating\" target=\"_blank\" rel=\"noopener noreferrer\">migration guide</a> for details of what&#39;s necessary to do that.</p>\n<p>Sapper is operationally stable and some of the Svelte maintainers run their businesses on Sapper. &quot;production readiness&quot; is subjective, and if Sapper fulfils your requirements, then it&#39;s production ready. As with any software, a major version number is not an indicator of whether something is suitable for your specific use-case.</p>\n","metadata":{"question":"Sapper is not 1.0 yet. Should I use it? What about SvelteKit?"}},{"fragment":"webpack-vs-rollup","answer":"<p>Sapper offers both Rollup and Webpack templates. If you don&#39;t have a strong reason to prefer one over the other, we&#39;d recommend using the Rollup template. The Rollup implementation supports additional features such as improved tree-shaking for smaller bundles, TypeScript, the ability to <a href=\"../docs#Browser_support\" rel=\"noopener noreferrer\">serve a legacy bundle to older browsers</a>, and it automatically lists all your <code>.js</code> and <code>.css</code> files in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link\" target=\"_blank\" rel=\"noopener noreferrer\"><code>Link</code> header</a> to <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\" target=\"_blank\" rel=\"noopener noreferrer\">preload</a> those files.</p>\n","metadata":{"question":"Should I use Webpack or Rollup with Sapper?"}},{"fragment":"typescript","answer":"<p>The Sapper template project with Rollup (see <a href=\"/docs#Getting_started\" rel=\"noopener noreferrer\">Getting started</a>) can be converted to TypeScript by running:</p>\n<pre class='language-bash'><code>node scripts/setupTypeScript.js</code></pre><p>You can also find a number of <a href=\"https://github.com/sveltejs/integrations#sapper-templates-boilerplates\" target=\"_blank\" rel=\"noopener noreferrer\">community templates</a> that utilize TypeScript.</p>\n","metadata":{"question":"How do I use TypeScript with Sapper?"}},{"fragment":"why-is-there-a-node_modules-folder-in-src","answer":"<p>Before bundling your app, Sapper builds a special package for your app, which you can access by importing from <code>@sapper/app</code>. Putting it inside <code>src/node_modules</code> means that it won&#39;t get nuked when you add new dependencies, and that you can easily import from it using the Node resolution algorithm.</p>\n","metadata":{"question":"Why is there a node_modules folder in the src folder of a Sapper project?"}}]